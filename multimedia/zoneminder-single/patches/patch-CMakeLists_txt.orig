$OpenBSD$

check_type_size was setting HAVE_UCONTEXT_T on OpenBSD even though it has
no ucontext support; ifdefs in code are using this instead of HAVE_UCONTEXT_H
thus failing.  alternative fix: change ifdefs.

support systems with clock_gettime in libc.

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -53,6 +53,10 @@ endif(${CMAKE_SYSTEM_NAME} MATCHES ".*BSD.*")
 if(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
 	set(HOST_OS "darwin")
 endif(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
+if(${CMAKE_SYSTEM_NAME} STREQUAL "OpenBSD")
+	set(HOST_OS "openbsd")
+endif(${CMAKE_SYSTEM_NAME} STREQUAL "OpenBSD")
+
 if(NOT HOST_OS)
 	message(FATAL_ERROR 
             "ZoneMinder was unable to deterimine the host OS. Please report this. Value of CMAKE_SYSTEM_NAME: ${CMAKE_SYSTEM_NAME}")
@@ -204,7 +208,7 @@ set(ZM_PERL_SEARCH_PATH "" CACHE PATH 
 	"Use to add a folder to your Perl's search path. This will need to be set in cases 
 	where ZM_PERL_MM_PARMS has been modified such that ZoneMinder's Perl modules are 
 	installed outside Perl's default search path.")
-set(ZM_TARGET_DISTRO "" CACHE STRING 
+set(ZM_TARGET_DISTRO "OpenBSD" CACHE STRING 
     "Build ZoneMinder for a specific distribution.  Currently, valid names are: fc27, fc26, el7, OS13, FreeBSD")
 set(ZM_SYSTEMD "OFF" CACHE BOOL 
     "Set to ON to force building ZM with systemd support. default: OFF")
@@ -234,6 +238,18 @@ elseif(ZM_TARGET_DISTRO STREQUAL "OS13")
 	set(ZM_WEB_GROUP "www")
 	set(ZM_WEBDIR "/srv/www/htdocs/zoneminder")
 	set(ZM_CGIDIR "/srv/www/cgi-bin")
+elseif(ZM_TARGET_DISTRO STREQUAL "OpenBSD")
+	set(ZM_RUNDIR "/var/www/run/zm")
+        set(ZM_SOCKDIR "/var/www/run/zm")
+	set(ZM_TMPDIR "/var/www/tmp/zm")
+        set(ZM_CONTENTDIR "/var/www/spool/zm")
+        set(ZM_WEB_USER "www")
+        set(ZM_WEB_GROUP "www")
+        set(ZM_CONFIG_DIR "/var/www/etc/zm")
+        set(ZM_CONFIG_SUBDIR "/var/www/etc/zm/conf.d")
+        set(ZM_WEBDIR "/var/www/htdocs/zm")
+        set(ZM_CGIDIR "/var/www/cgi-bin/zm")
+        set(ZM_PERL_MM_PARMS "INSTALLDIRS=site")
 elseif(ZM_TARGET_DISTRO STREQUAL "FreeBSD")
 	set(ZM_RUNDIR "/var/run/zm")
         set(ZM_SOCKDIR "/var/run/zm")
@@ -268,6 +284,7 @@ if(NOT HAVE_LIBV4L1_VIDEODEV_H)
 	check_include_file("linux/videodev.h" HAVE_LINUX_VIDEODEV_H)
 endif(NOT HAVE_LIBV4L1_VIDEODEV_H)
 check_include_file("linux/videodev2.h" HAVE_LINUX_VIDEODEV2_H)
+check_include_file("sys/videoio.h" HAVE_SYS_VIDEOIO_H)
 check_include_file("execinfo.h" HAVE_EXECINFO_H)
 if (HAVE_EXECINFO_H)
   check_function_exists("backtrace" HAVE_DECL_BACKTRACE)
@@ -286,17 +303,22 @@ check_function_exists("syscall" HAVE_SYSCALL)
 check_function_exists("sendfile" HAVE_SENDFILE)
 check_function_exists("posix_memalign" HAVE_POSIX_MEMALIGN)
 check_type_size("siginfo_t" HAVE_SIGINFO_T)
+if (HAVE_UCONTEXT_H)
 check_type_size("ucontext_t" HAVE_UCONTEXT_T)
+endif (HAVE_UCONTEXT_H)
 
 # *** LIBRARY CHECKS ***
 
 if (UNIX)
     include (CheckLibraryExists)
-    CHECK_LIBRARY_EXISTS(rt clock_gettime "time.h" HAVE_CLOCK_GETTIME)
+    CHECK_LIBRARY_EXISTS(c clock_gettime "time.h" HAVE_CLOCK_GETTIME)
     if(NOT HAVE_CLOCK_GETTIME)
-        message(FATAL_ERROR "clock_gettime not found")
-    else(NOT HAVE_CLOCK_GETTIME)
-        list(APPEND ZM_BIN_LIBS "-lrt")
+      CHECK_LIBRARY_EXISTS(rt clock_gettime "time.h" HAVE_CLOCK_GETTIME)
+      if(NOT HAVE_CLOCK_GETTIME)
+	message(FATAL_ERROR "clock_gettime not found")
+      else(NOT HAVE_CLOCK_GETTIME)
+	list(APPEND ZM_BIN_LIBS "-lrt")
+      endif(NOT HAVE_CLOCK_GETTIME)
     endif(NOT HAVE_CLOCK_GETTIME)
 endif(UNIX)
 
@@ -697,18 +719,20 @@ if(HAVE_LINUX_VIDEODEV_H OR HAVE_LIBV4L1_VIDEODEV_H)
 	set(ZM_HAS_V4L 1)
 	set(ZM_HAS_V4L1 1)
 endif(HAVE_LINUX_VIDEODEV_H OR HAVE_LIBV4L1_VIDEODEV_H)
-if(HAVE_LINUX_VIDEODEV2_H)
+if(HAVE_LINUX_VIDEODEV2_H OR HAVE_SYS_VIDEOIO_H)
 	set(ZM_HAS_V4L 1)
 	set(ZM_HAS_V4L2 1)
-endif(HAVE_LINUX_VIDEODEV2_H)
+endif(HAVE_LINUX_VIDEODEV2_H OR HAVE_SYS_VIDEOIO_H)
 if((NOT HAVE_LINUX_VIDEODEV_H) 
     AND (NOT HAVE_LIBV4L1_VIDEODEV_H) 
-    AND (NOT HAVE_LINUX_VIDEODEV2_H))
+    AND (NOT HAVE_LINUX_VIDEODEV2_H)
+    AND (NOT HAVE_SYS_VIDEOIO_H))
 	message(AUTHOR_WARNING 
             "Video 4 Linux headers weren't found - Analog and USB camera support will not be available")
 endif((NOT HAVE_LINUX_VIDEODEV_H) 
     AND (NOT HAVE_LIBV4L1_VIDEODEV_H) 
-    AND (NOT HAVE_LINUX_VIDEODEV2_H))
+    AND (NOT HAVE_LINUX_VIDEODEV2_H)
+    AND (NOT HAVE_SYS_VIDEOIO_H))
 # Check for PCRE and enable ZM_PCRE accordingly
 set(ZM_PCRE 0)
 if(HAVE_LIBPCRE AND HAVE_PCRE_H)
