$OpenBSD$

Index: libstdc++-v3/include/bits/stl_bvector.h
--- libstdc++-v3/include/bits/stl_bvector.h.orig
+++ libstdc++-v3/include/bits/stl_bvector.h
@@ -61,6 +61,8 @@
 #include <bits/functional_hash.h>
 #endif
 
+#define __EXCSTR(s) (__extension__({static const char __exception_what__[] __attribute__((section(".irom.exceptiontext,\"MS\",@progbits,1#"))) = (s); &__exception_what__[0];}))
+
 namespace std _GLIBCXX_VISIBILITY(default)
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
@@ -924,9 +926,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
       _M_range_check(size_type __n) const
       {
 	if (__n >= this->size())
-	  __throw_out_of_range_fmt(__N("vector<bool>::_M_range_check: __n "
+	  __throw_out_of_range_fmt(__EXCSTR(__N("vector<bool>::_M_range_check: __n "
 				       "(which is %zu) >= this->size() "
-				       "(which is %zu)"),
+				       "(which is %zu)")),
 				   __n, this->size());
       }
 
@@ -943,7 +945,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
       reserve(size_type __n)
       {
 	if (__n > max_size())
-	  __throw_length_error(__N("vector::reserve"));
+	  __throw_length_error(__EXCSTR(__N("vector::reserve")));
 	if (capacity() < __n)
 	  _M_reallocate(__n);
       }
