$OpenBSD$

Index: libstdc++-v3/include/bits/regex_compiler.h
--- libstdc++-v3/include/bits/regex_compiler.h.orig
+++ libstdc++-v3/include/bits/regex_compiler.h
@@ -28,6 +28,8 @@
  *  Do not attempt to use it directly. @headername{regex}
  */
 
+#define __EXCSTR(s) (__extension__({static const char __exception_what__[] __attribute__((section(".irom.exceptiontext,\"MS\",@progbits,1#"))) = (s); &__exception_what__[0];}))
+
 namespace std _GLIBCXX_VISIBILITY(default)
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
@@ -447,7 +449,7 @@ namespace __detail
 						 __s.data() + __s.size());
 	if (__st.empty())
 	  __throw_regex_error(regex_constants::error_collate,
-			      "Invalid collate element.");
+			      __EXCSTR("Invalid collate element."));
 	_M_char_set.push_back(_M_translator._M_translate(__st[0]));
 	_GLIBCXX_DEBUG_ONLY(_M_is_ready = false);
 	return __st;
@@ -460,7 +462,7 @@ namespace __detail
 						 __s.data() + __s.size());
 	if (__st.empty())
 	  __throw_regex_error(regex_constants::error_collate,
-			      "Invalid equivalence class.");
+			      __EXCSTR("Invalid equivalence class."));
 	__st = _M_traits.transform_primary(__st.data(),
 					   __st.data() + __st.size());
 	_M_equiv_set.push_back(__st);
@@ -476,7 +478,7 @@ namespace __detail
 						 __icase);
 	if (__mask == 0)
 	  __throw_regex_error(regex_constants::error_collate,
-			      "Invalid character class.");
+			      __EXCSTR("Invalid character class."));
 	if (!__neg)
 	  _M_class_set |= __mask;
 	else
@@ -489,7 +491,7 @@ namespace __detail
       {
 	if (__l > __r)
 	  __throw_regex_error(regex_constants::error_range,
-			      "Invalid range in bracket expression.");
+			      __EXCSTR("Invalid range in bracket expression."));
 	_M_range_set.push_back(make_pair(_M_translator._M_transform(__l),
 					 _M_translator._M_transform(__r)));
 	_GLIBCXX_DEBUG_ONLY(_M_is_ready = false);
@@ -556,5 +558,7 @@ namespace __detail
 } // namespace __detail
 _GLIBCXX_END_NAMESPACE_VERSION
 } // namespace std
+
+#undef __EXCSTR
 
 #include <bits/regex_compiler.tcc>
